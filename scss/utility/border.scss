$borders: border-top border-bottom border-left border-right;

@each $border in $borders {
    .mod-#{$border} {
        #{$border}: $default-border;
    }

    @for $i from 1 through length($transparencies) {
        .mod-#{$border}-transparency-#{$i} {
            #{$border}: $default-border-size solid rgba($medium-grey, nth($transparencies, $i));
        }
    }
}

@for $i from 1 through length($transparencies) {
    .mod-border-transparency-#{$i} {
        border: $default-border-size solid rgba($medium-grey, nth($transparencies, $i));
    }
}

@each $border in $borders {
    .mod-no-#{$border} {
        #{$border}: none;
    }
}

.mod-border {
    border: $default-border;
}

.mod-no-border {
    border: none;
}

@for $i from 1 through 10 {
    $radius: $border-radius * $i;

    .mod-rounded-border-#{$i} {
        border-radius: $radius;
    }

    .mod-rounded-border-top-#{$i} {
        border-radius: $radius $radius 0 0;
    }

    .mod-rounded-border-bottom-#{$i} {
        border-radius: 0 0 $radius $radius;
    }

    .mod-rounded-border-left-#{$i} {
        border-radius: $radius 0 0 $radius;
    }

    .mod-rounded-border-right-#{$i} {
        border-radius: 0 $radius $radius 0;
    }
}

@each $color, $value in $palette {
    .border-color-#{$color} {
        border-color: $value;
    }

    .border-left-color-#{$color} {
        border-left-color: $value;
    }

    .border-right-color-#{$color} {
        border-left-color: $value;
    }

    .border-top-color-#{$color} {
        border-left-color: $value;
    }

    .border-bottom-color-#{$color} {
        border-left-color: $value;
    }
}
